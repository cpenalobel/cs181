import pandas as pd
import numpy as np
from sklearn.cross_validation import train_test_split
from __future__ import print_function
from rdkit import Chem
from rdkit import Avalon
from rdkit.Avalon import pyAvalonTools

"""
Read in train and test as Pandas DataFrames
"""
df_train = pd.read_csv("original_data/train.csv", usecols=[0])

noFeatures = 1024

fingerprinter=lambda x,y:pyAvalonTools.GetAvalonCountFP(x,noFeatures,isQuery=y,bitFlags=pyAvalonTools.avalonSSSBits)

def addFeatures(df_, noFeatures, name='train'):
    noMolecules = len(df_['smiles'])
    df = pd.DataFrame(np.zeros(1))
    df[0] = df_['smiles']
    df.columns = ['smiles']
    for i in range(noMolecules):
        m = Chem.MolFromSmiles(df_.smiles.iloc[i])
        fp = fingerprinter(m, False)
        
            
        print(i, end="\r")
        df.to_csv('edited_data/1024_features/'+name+'_'+str(noFeatures)+'_' + str(i+1) + '.csv')
    return df

addFeatures(df_train, noFeatures)

%xdel df_train

"""
Read in train and test as Pandas DataFrames
"""
df_test = pd.read_csv("original_data/test.gz", usecols=[1])


df_test.head()

noMolecules = len(df_test['smiles'])

addFeatures(df_test, noFeatures, 'test')

def addFeatures2(df_, noFeatures, name='train'):
    noMolecules = len(df_['smiles'])
    df = pd.DataFrame(np.zeros(1))
    df[0] = df_['smiles']
    df.columns = ['smiles']
    for i in range(noMolecules):
        m = Chem.MolFromSmiles(df_.smiles.iloc[i])
        fp = fingerprinter(m, False)
        for j in range(noFeatures):
            df.iat[i,j+1] = fp[j]
            df.iat[prog,0] = df_['smiles'][i]
            df.to_csv('edited_data/1024_features/'+name+'_'+str(noFeatures)+'_' + str(i+1) + '.csv')
        print(i, end="\r")
    return df